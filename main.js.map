{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contributors/contributors.component.css","webpack:///./src/app/contributors/contributors.component.html","webpack:///./src/app/contributors/contributors.component.ts","webpack:///./src/app/core/security/auth-info.ts","webpack:///./src/app/core/security/auth.service.ts","webpack:///./src/app/core/security/safe-url.pipe.ts","webpack:///./src/app/court-share/court-share.component.css","webpack:///./src/app/court-share/court-share.component.html","webpack:///./src/app/court-share/court-share.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/share-data-dialog.component.html","webpack:///./src/app/events/events.component.css","webpack:///./src/app/events/events.component.html","webpack:///./src/app/events/events.component.ts","webpack:///./src/app/firestore-data.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/pages/players/players.component.css","webpack:///./src/app/pages/players/players.component.html","webpack:///./src/app/pages/players/players.component.ts","webpack:///./src/app/pages/tournaments/add-dialog.component.html","webpack:///./src/app/pages/tournaments/tournaments.component.css","webpack:///./src/app/pages/tournaments/tournaments.component.html","webpack:///./src/app/pages/tournaments/tournaments.component.ts","webpack:///./src/app/pipes/filter.pipe.ts","webpack:///./src/app/services/share.service.ts","webpack:///./src/app/services/upload.service.ts","webpack:///./src/app/shared/material.module.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/videos/videos.component.css","webpack:///./src/app/videos/videos.component.html","webpack:///./src/app/videos/videos.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DashboardComponent, AppShareDataDialogComponent } from './dashboard/dashboard.component';\r\nimport { CourtShareComponent } from './court-share/court-share.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { ContributorsComponent } from './contributors/contributors.component';\r\nimport { VideosComponent } from './videos/videos.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthGuard } from './core/security/auth.guard';\r\nimport { TournamentsComponent } from './pages/tournaments/tournaments.component';\r\nimport { PlayersComponent } from './pages/players/players.component';\r\n\r\n    const routes: Routes = [\r\n      { path: '', redirectTo: 'tournaments', pathMatch: 'full' },\r\n      {\r\n          path: 'home',\r\n          component: DashboardComponent,\r\n          // canActivate: [ AuthGuard ]\r\n      },\r\n      {\r\n          path: 'videos',\r\n          component: VideosComponent,\r\n      },\r\n      {\r\n          path: 'people',\r\n          component: ContributorsComponent\r\n      },\r\n      {\r\n          path: 'share',\r\n          component: CourtShareComponent\r\n      },\r\n      {\r\n        path: 'tournaments',\r\n        component: TournamentsComponent\r\n      },\r\n      {\r\n        path: 'players',\r\n        component: PlayersComponent\r\n      },\r\n      { path: 'login', component: LoginComponent },\r\n      {\r\n          path: '**',\r\n          // redirectTo:'home',\r\n          component: NotFoundComponent\r\n      }\r\n    ];\r\n\r\n    @NgModule({\r\n        imports: [\r\n            RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})\r\n        ],\r\n        exports: [\r\n            RouterModule\r\n        ],\r\n        declarations: []\r\n    })\r\n    export class AppRoutingModule { }\r\n\r\n    export const AppRoutingComponents = [\r\n        DashboardComponent,\r\n        ContributorsComponent,\r\n        CourtShareComponent,\r\n        NotFoundComponent,\r\n        AppShareDataDialogComponent,\r\n        VideosComponent\r\n    ];\r\n","module.exports = \".app-main {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n  }\\r\\n  .mt20{\\r\\n    margin-top:20px;\\r\\n  }\\r\\n  .app-is-mobile .app-toolbar {\\r\\n    position: fixed;\\r\\n    /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\r\\n    z-index: 2;\\r\\n  }\\r\\n  h1.app-ranger {\\r\\n    margin-left: 8px;\\r\\n  }\\r\\n  .app-sidenav-container {\\r\\n    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\r\\n       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\r\\n    flex: 1;\\r\\n  }\\r\\n  .mat-sidenav{\\r\\n\\r\\n    width: 250px;\\r\\n  }\\r\\n  button[mat-icon-button]{\\r\\n    background-color: transparent;\\r\\n    border: aliceblue;\\r\\n    color: #fff;\\r\\n  }\\r\\n  .app-is-mobile .app-sidenav-container {\\r\\n    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\r\\n       `<body>` to be our scrolling element for mobile layouts. */\\r\\n    flex: 1 0 auto;\\r\\n  }\\r\\n  button,a, a:link, a:hover, a:visited, a:focus{\\r\\n      outline: none !important;\\r\\n  }\\r\\n  .mat-list-item i{\\r\\n    margin-right: 20px;\\r\\n    position: relative;\\r\\n    top: -1px;\\r\\n    color:#3f51b5;\\r\\n  }\\r\\n  .brand{\\r\\n    text-align:center;\\r\\n    border-bottom: 1px solid #3f51b5;\\r\\n    margin-bottom: 10px;\\r\\n    padding: 0 0 10px 0;\\r\\n  }\\r\\n\"","module.exports = \"<ngx-spinner\\nbdColor=\\\"rgba(51,51,51,0.8)\\\"\\n  size=\\\"medium\\\"\\n  color=\\\"#fff\\\"\\n  type=\\\"timer\\\"></ngx-spinner>\\n<div class=\\\"app-main\\\">\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"app-toolbar\\\">\\n    <button mat-icon-button (click)=\\\"snav.toggle()\\\"><mat-icon>menu</mat-icon></button>\\n    <h1 class=\\\"app-ranger\\\">Ranger Shuttlers</h1>\\n  </mat-toolbar>\\n  <mat-sidenav-container class=\\\"app-sidenav-container\\\">\\n    <mat-sidenav #snav >\\n      <mat-nav-list>\\n        <div class=\\\"brand\\\"><img src=\\\"./assets/icons/icon-96x96.png\\\" alt=\\\"\\\"></div>\\n        <a mat-list-item (click)=\\\"closeMenu()\\\" [routerLink]=\\\"['/home']\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">home</i> Home</a>\\n        <a mat-list-item (click)=\\\"closeMenu()\\\" [routerLink]=\\\"['/share']\\\" routerLinkActive=\\\"active\\\">\\n          <i class=\\\"material-icons\\\">\\n              add_to_queue </i> Add court share</a>\\n        <a mat-list-item (click)=\\\"closeMenu()\\\" [routerLink]=\\\"['/people']\\\" routerLinkActive=\\\"active\\\">\\n          <i class=\\\"material-icons\\\">\\n            supervisor_account\\n            </i>Add people</a>\\n            <a mat-list-item (click)=\\\"closeMenu()\\\" [routerLink]=\\\"['/tournaments']\\\" routerLinkActive=\\\"active\\\">\\n              <i class=\\\"material-icons\\\">\\n                dashboard\\n                </i>Tournaments</a>\\n\\n        <a mat-list-item (click)=\\\"closeMenu()\\\" [routerLink]=\\\"['/videos']\\\" routerLinkActive=\\\"active\\\">\\n            <i class=\\\"material-icons\\\"> play_circle_filled </i> Videos\\n        </a>\\n        <a mat-list-item routerLinkActive=\\\"active\\\" (click)=\\\"logout()\\\"> <i class=\\\"material-icons\\\">play_circle_filled </i> Logout</a>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n\\n    <mat-sidenav-content>\\n      <div class=\\\"container mt20\\\">\\n          <router-outlet></router-outlet>\\n      </div>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div>\\n<!--\\n -->\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FirestoreDataService } from './firestore-data.service';\nimport { User } from './user';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport { SwUpdate } from '@angular/service-worker';\nimport { AuthService } from './core/security/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  @ViewChild(MatSidenav) drawer: MatSidenav;\n  arr: User[] = [];\n  model = { firstname: '', lastname: '', mobile: '' };\n  constructor(public _data: FirestoreDataService, ar: ActivatedRoute,\n    private _router: Router,\n    private swUpdate: SwUpdate,\n    private auth: AuthService,\n    private route: ActivatedRoute) {\n  }\n  ngOnInit() {\n      this.swUpdate.available.subscribe(() => {\n        this.swUpdate.activateUpdate().then(() => document.location.reload());\n          if (confirm('New version available. Load New Version?')) {\n            window.location.reload();\n          }\n        });\n\n    }\n\n    closeMenu() {\n      this.drawer.close();\n    }\n    logout() {\n      this.auth.logout();\n    }\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { AngularFireModule } from 'angularfire2';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { environment } from '../environments/environment';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { AppRoutingModule, AppRoutingComponents } from './app-routing.module';\nimport { YoutubePlayerModule } from 'ngx-youtube-player';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule\n} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { AppShareDataDialogComponent } from './dashboard/dashboard.component';\nimport { MyFilterPipe } from './pipes/filter.pipe';\nimport { SafeUrlPipe } from './core/security/safe-url.pipe';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './core/security/auth.service';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { EventsComponent } from './events/events.component';\nimport { TournamentsComponent, AppAddDialogComponent } from './pages/tournaments/tournaments.component';\nimport { PlayersComponent } from './pages/players/players.component';\nimport { SharedModule } from './shared/shared.module';\n// import { PagesModule } from './pages/pages.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppRoutingComponents,\n    MyFilterPipe,\n    SafeUrlPipe,\n    LoginComponent,\n    EventsComponent,\n    // TournamentsComponent,\n    AppAddDialogComponent,\n    PlayersComponent\n  ],\n  entryComponents: [ AppShareDataDialogComponent, AppAddDialogComponent ],\n  imports: [\n    YoutubePlayerModule,\n    HttpClientModule,\n    NgxSpinnerModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    SharedModule,\n    // PagesModule,\n    AngularFireModule.initializeApp(environment.firebase, {databaseURL: 'https://rscs-5d73d.firebaseio.com'}),\n    AngularFireDatabaseModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }), // for database\n  ],\n  providers: [AngularFirestore, AuthService, AngularFireAuth],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".full-width{\\r\\n    width: 100%;\\r\\n}\\r\\n.mt20{\\r\\n    margin-top: 20px;\\r\\n}\"","module.exports = \"<div class=\\\"row mt20 justify-content-center\\\">\\n  <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n          <td>Id</td>\\n          <td>Player Name</td>\\n          <!-- <td colspan=\\\"2\\\">Actions</td> -->\\n      </tr>\\n      </thead>\\n\\n      <tbody>\\n          <tr *ngFor=\\\"let item of people; let i= index\\\">\\n              <td>{{i+1}}</td>\\n              <td>{{ item.name }}</td>\\n              <!-- <td><a (click)=\\\"edit(item)\\\" class=\\\"btn btn-primary\\\">Edit</a></td> -->\\n              <!-- <td><a (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">Delete</a></td> -->\\n          </tr>\\n      </tbody>\\n    </table>\\n</div>\\n<div class=\\\"mt20 row justify-content-center\\\">\\n  <div class=\\\"col-10\\\">\\n      <form [formGroup]=\\\"addPlayerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n\\n          <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Full Name\\\" formControlName=\\\"name\\\">\\n              </mat-form-field>\\n              <div *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.name.errors.required\\\">Court Fee is required</div>\\n              </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n              <button class=\\\"btn btn-primary\\\">Add People</button>\\n          </div>\\n      </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FirestoreDataService } from '../firestore-data.service';\nimport { People } from '../people';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nexport interface PeopleList {\n  name: string;\n  id: string;\n}\n@Component({\n  selector: 'app-contributors',\n  templateUrl: './contributors.component.html',\n  styleUrls: ['./contributors.component.css']\n})\n\nexport class ContributorsComponent implements OnInit {\n  addPlayerForm: FormGroup;\n  submitted = false;\n  people: PeopleList[];\n  constructor(private formBuilder: FormBuilder, public _data: FirestoreDataService) {  }\n\n  ngOnInit() {\n      this.addPlayerForm = this.formBuilder.group({\n        name: ['', Validators.required]\n      });\n      this._data.getPeople().subscribe(\n        (user: People[]) => {\n          this.people = user;\n          console.log(this.people);\n        }\n      );\n  }\n\n// convenience getter for easy access to form fields\n    get f() { return this.addPlayerForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.addPlayerForm.invalid) {\n            return;\n        }\n        this._data.addPeople(this.addPlayerForm.value);\n        // console.log(this.addPlayerForm.value)\n    }\n\n    delete(user) {\n        this._data.deletePeople(user);\n      }\n\n}\n","export class AuthInfo {\r\n\r\n  constructor(\r\n      public uid: string\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  isLoggedIn() {\r\n      return !!this.uid;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\nimport { AuthInfo } from './auth-info';\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  static UNKNOWN_USER = new AuthInfo(null);\n  authInfo$: BehaviorSubject<AuthInfo> = new BehaviorSubject<AuthInfo>(AuthService.UNKNOWN_USER);\n  constructor(public afAuth: AngularFireAuth, private router: Router) { }\n\n  doGoogleLogin() {\n    return new Promise<any>((resolve, reject) => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      provider.addScope('profile');\n      provider.addScope('email');\n      this.afAuth.auth\n      .signInWithPopup(provider)\n      .then(res => {\n        resolve(res);\n        this.router.navigate(['/home']);\n      });\n    });\n  }\n\n\n\n  logout() {\n    this.afAuth.auth.signOut();\n    this.authInfo$.next(AuthService.UNKNOWN_USER);\n    this.router.navigate(['/home']);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeUrl'\r\n})\r\nexport class SafeUrlPipe implements PipeTransform {\r\n\r\n    constructor(private sanitizer: DomSanitizer) {\r\n\r\n    }\r\n\r\n  transform(url) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n\r\n}\r\n","module.exports = \".full-width{\\r\\n    width: 100%;\\r\\n}\\r\\n.mt20{\\r\\n    margin-top: 20px;\\r\\n}\\r\\n.red{\\r\\n  color: red;\\r\\n}\\r\\n\"","module.exports = \"\\n\\n<div class=\\\"row justify-content-center\\\">\\n  <div class=\\\"col-10\\\">\\n      <form [formGroup]=\\\"addShareForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput [matDatepicker]=\\\"picker\\\"  (dateChange)=\\\"compareDate($event)\\\"  placeholder=\\\"Choose a date\\\" formControlName=\\\"when\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #picker></mat-datepicker>\\n                </mat-form-field>\\n                <div *ngIf=\\\"submitted && f.when.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.when.errors.required\\\">Date is required</div>\\n                </div>\\n\\n          </div>\\n          <div *ngIf=\\\"existDate\\\" class=\\\"form-group red\\\" >\\n              {{checkExistingMsg}}\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n                <mat-select placeholder=\\\"Who played\\\" formControlName=\\\"whoPlayed\\\" multiple>\\n                  <mat-option *ngFor=\\\"let item of people\\\" [value]=\\\"item.id\\\">\\n                    {{item.name}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            <div *ngIf=\\\"submitted && f.whoPlayed.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.whoPlayed.errors.required\\\">Court Paid By is required</div>\\n            </div>\\n        </div>\\n          <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input type=\\\"number\\\" matInput placeholder=\\\"Court fee\\\" formControlName=\\\"courtFee\\\">\\n                <span matPrefix>&#8377; &nbsp;</span>\\n                <span matSuffix>.00</span>\\n              </mat-form-field>\\n              <div *ngIf=\\\"submitted && f.courtFee.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.courtFee.errors.required\\\">Court Fee is required</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"full-width\\\">\\n                  <mat-select placeholder=\\\"Court paid by\\\" formControlName=\\\"courtPaidBy\\\">\\n                    <mat-option *ngFor=\\\"let item of people\\\" [value]=\\\"item.id\\\">\\n                      {{item.name}}\\n                    </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              <div *ngIf=\\\"submitted && f.courtPaidBy.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.courtPaidBy.errors.required\\\">Court Paid By is required</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input type=\\\"number\\\" matInput placeholder=\\\"Shuttlecock cost\\\" formControlName=\\\"shuttleCost\\\">\\n                <span matPrefix>&#8377; &nbsp;</span>\\n                <span matSuffix>.00</span>\\n              </mat-form-field>\\n              <div *ngIf=\\\"submitted && f.shuttleCost.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.shuttleCost.errors.required\\\">Shuttle Cost is required</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"full-width\\\">\\n                  <mat-select placeholder=\\\"Shuttlecock paid by\\\" formControlName=\\\"shuttleTookBy\\\">\\n                    <mat-option *ngFor=\\\"let item of people\\\" [value]=\\\"item.id\\\">\\n                      {{item.name}}\\n                    </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              <div *ngIf=\\\"submitted && f.shuttleTookBy.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.shuttleTookBy.errors.required\\\">Shuttle Took By is required</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <section class=\\\"example-section\\\">\\n              <mat-checkbox formControlName=\\\"extraHours\\\">Extra hours if any?</mat-checkbox>\\n            </section>\\n          </div>\\n          <div class=\\\"form-group\\\" *ngIf=\\\"addShareForm.value.extraHours\\\">\\n            <div class=\\\"form-group\\\">\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input type=\\\"number\\\" matInput placeholder=\\\"Extra hour(s) amount\\\" formControlName=\\\"extraCourtFee\\\">\\n                  <span matPrefix>&#8377; &nbsp;</span>\\n                  <span matSuffix>.00</span>\\n                </mat-form-field>\\n                <div *ngIf=\\\"submitted && f.extraCourtFee.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.extraCourtFee.errors.required\\\">Court Fee is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <mat-form-field class=\\\"full-width\\\">\\n                    <mat-select placeholder=\\\"Who played\\\" formControlName=\\\"extraWhoPlayed\\\" multiple>\\n                      <mat-option *ngFor=\\\"let item of people\\\" [value]=\\\"item.id\\\">\\n                        {{item.name}}\\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                <div *ngIf=\\\"submitted && f.extraWhoPlayed.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.extraWhoPlayed.errors.required\\\">Court Paid By is required</div>\\n                </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <button class=\\\"btn btn-primary\\\">Register</button>\\n          </div>\\n      </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ShareService } from '../services/share.service';\nimport { FirestoreDataService } from '../firestore-data.service';\nimport { People } from '../people';\nimport { ActivatedRoute, Route, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Timestamp } from 'rxjs/internal/operators/timestamp';\n\n@Component({\n  selector: 'app-court-share',\n  templateUrl: './court-share.component.html',\n  styleUrls: ['./court-share.component.css']\n})\n\nexport class CourtShareComponent implements OnInit {\n  // registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n//  private _onChange: () => void;\n  addShareForm: FormGroup;\n  submitted = false;\n  people: People[];\n  balance_sheet: any = [];\n  public today = new Date();\n  public checkExistingDate: any;\n  public checkExistingMsg: string;\n  public existDate: Boolean = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private _share: ShareService,\n    private _router: Router,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private _people: FirestoreDataService) {\n\n   }\n\n  ngOnInit() {\n    this.spinner.show();\n      this.addShareForm = this.formBuilder.group({\n        when: ['', Validators.required],\n        courtFee: ['', Validators.required],\n        courtPaidBy: ['', Validators.required],\n        shuttleCost: ['', Validators.required],\n        shuttleTookBy: ['', Validators.required],\n        extraHours: [false],\n        totalAmount: [''],\n        whoPlayed: ['', Validators.required],\n        extraWhoPlayed: [''],\n        extraCourtFee: ['']\n          // email: ['', [Validators.required, Validators.email]],\n          // password: ['', [Validators.required, Validators.minLength(6)]]\n      });\n      this.getPeopleList();\n\n      this._share.getShare().subscribe(\n        data => {\n          this.spinner.hide();\n          this.checkExistingDate = data;\n          // console.log(data);\n        });\n  }\n\n  compareDate(event) {\n    let tests = null;\n    // console.log(event.value.toDateString());\n    this.checkExistingDate.forEach(function(val) {\n      // console.log(new Date(val.when.toDate()).toDateString())\n      if (new Date(val.when.toDate()).toDateString() === event.value.toDateString()) {\n        tests = 'This date is already updated!';\n      }\n    });\n    this.checkExistingMsg = tests;\n    if (tests) {\n      this.existDate = true;\n    }\n    console.log(this.checkExistingMsg);\n  }\n  getPeopleList() {\n    // console.log(\"calling\")\n    this.spinner.show();\n    this._people.getPeople().subscribe(\n      data => {\n        this.people = data;\n        this.spinner.hide();\n        console.log(data);\n      });\n  }\n// convenience getter for easy access to form fields\n    get f(): any { return this.addShareForm.controls; }\n\n    onSubmit() {\n      this.spinner.show();\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.addShareForm.invalid) {\n            return;\n        }\n        // Total Amount\n        this.addShareForm.value.totalAmount = this.addShareForm.value.courtFee + this.addShareForm.value.shuttleCost;\n        // Divide total into who played\n        const divideAmount = this.addShareForm.value.totalAmount / this.addShareForm.value.whoPlayed.length;\n        // console.log(divideAmount)\n        const shareSheet = [];\n         const courtBy = this.addShareForm.value.courtPaidBy;\n        const courtAmt = this.addShareForm.value.courtFee;\n        const shuttleBy = this.addShareForm.value.shuttleTookBy;\n        const shuttleCost = this.addShareForm.value.shuttleCost;\n        this.addShareForm.value.whoPlayed.forEach(function (value) {\n          console.log(value);\n          if (courtBy === value && shuttleBy === value) {\n            shareSheet.push({\n                id: value,\n                played: divideAmount,\n                court: courtAmt,\n                shuttle: shuttleCost\n              });\n          } else if (courtBy === value) {\n            shareSheet.push({\n                id: value,\n                played: divideAmount,\n                court: courtAmt,\n                shuttle: 0\n              });\n          } else if (shuttleBy === value) {\n            shareSheet.push({\n                id: value,\n                played: divideAmount,\n                court: 0,\n                shuttle: shuttleCost\n              });\n          } else {\n            shareSheet.push({\n              id: value,\n              played: divideAmount,\n              court: 0,\n              shuttle: 0\n            });\n          }\n        });\n\n      //  console.log(shareSheet)\n       this.addShareForm.value.shareSheet = shareSheet;\n       this.addShareForm.value.createdAt = this.today;\n        this._share.addShare(this.addShareForm.value).then(() => {\n          this.spinner.hide();\n           this._router.navigate([''], { relativeTo: this.route });\n          }).catch(function() {\n            this.spinner.hide();\n          });\n\n    }\n\n\n}\n// export function requiredIf(requiredIf:{value:boolean}): ValidatorFn {\n\n//   return (control: AbstractControl): ValidationErrors | null => {\n\n//    let value = control.value;\n//    if ((value == null || value == undefined || value == \"\") && requiredIf.value) {\n//               return {\n//                   requiredIf: {condition:requiredIf.value}\n//               };\n//       }\n//    return null;\n//   }\n// }\n","module.exports = \"/* .dashboard{\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n.dashboard li{\\r\\n    margin: 0;\\r\\n    padding: 15px 10px;\\r\\n    background: #f2f2f2;\\r\\n    list-style-type: none;\\r\\n    border-bottom: 1px solid #dedede;\\r\\n}\\r\\n.dashboard li h3{\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    font-size: 16px;\\r\\n}\\r\\n.dotMenu:after {\\r\\n    content: '\\\\2807';\\r\\n    font-size: 30px;\\r\\n    position: relative;\\r\\n    top: -7px;\\r\\n} */\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\ntable td.negative {\\r\\n  color: #ff2500;\\r\\n  font-weight: 700;\\r\\n}\\r\\ntable td.postive {\\r\\n  color: #00ff16;\\r\\n}\\r\\n.dashboard_table {\\r\\n  font-size: 12px;\\r\\n}\\r\\n\"","module.exports = \"<div mat-dialog-content *ngIf=\\\"sum\\\">\\n  <table class=\\\"table table-striped table-dark dashboard_table\\\">\\n    <tr>\\n      <th>Players</th>\\n      <th>Paid Total</th>\\n      <th>Played Total</th>\\n      <th>To Pay / Get</th>\\n    </tr>\\n    <tr *ngFor=\\\"let item of sum\\\">\\n      <td>\\n        <div *ngFor=\\\"let name of peopleList\\\">\\n          {{item.id == name.id ? name.name:''}}\\n        </div>\\n      </td>\\n      <td>&#8377; {{item.totalPaid | number: '1.1-1'}}</td>\\n      <td>&#8377; {{item.totalPlayed | number:'1.1-1'}}</td>\\n      <td [ngClass]=\\\"item.toPay >= 0 ? 'postive':'negative'\\\">&#8377; {{item.toPay | number:'1.1-1'}}</td>\\n    </tr>\\n\\n  </table>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <!-- Position Column -->\\n    <!-- <ng-container matColumnDef=\\\"position\\\">\\n        <th mat-header-cell *matHeaderCellDef> No. </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\n      </ng-container> -->\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"when\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.when.toDate() | date: 'mediumDate':'asc'}} </td>\\n    </ng-container>\\n\\n    <!-- Weight Column -->\\n    <ng-container matColumnDef=\\\"courtFee\\\">\\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">&#8377; {{element.totalAmount}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef> Action </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <button mat-raised-button (click)=\\\"showPop(element)\\\">More</button>\\n        <button *ngIf=\\\"deleteRecord\\\" mat-raised-button (click)=\\\"delete(element)\\\">Delete</button>\\n      </td>\\n    </ng-container>\\n    <!-- Symbol Column -->\\n    <!-- <ng-container matColumnDef=\\\"symbol\\\">\\n        <th mat-header-cell *matHeaderCellDef> Symbol </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\n      </ng-container> -->\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 20, 30]\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\\n<!-- <div mat-dialog-content>\\n    <table class=\\\"table table-stripped\\\">\\n        <tr>\\n            <th>Players</th>\\n            <th>Court</th>\\n            <th>Shuttle</th>\\n            <th>Share</th>\\n        </tr>\\n        <tr *ngFor=\\\"let item of _datas.shareSheet\\\">\\n            <td>\\n                <div *ngFor=\\\"let name of _datas.people\\\">\\n                    {{item.id == name.id ? name.name:''}}\\n                </div>\\n            </td>\\n            <td>{{item.court}}</td>\\n            <td>{{item.shuttle}}</td>\\n            <td>{{item.played}}</td>\\n        </tr>\\n\\n    </table>\\n</div> -->\\n\"","import { Component, OnInit, ViewChild, Inject, OnDestroy, AfterContentInit } from '@angular/core';\nimport { FirestoreDataService } from '../firestore-data.service';\nimport {MatPaginator, MatTableDataSource, MatSort} from '@angular/material';\nimport { ShareService } from '../services/share.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nexport interface PeriodicElement {\n  when: string;\n  courtFee: number;\n  id: string;\n  totalAmount: number;\n  toDate: string;\n  whoPlayed: Array<any>;\n  shareSheet: Array<any>;\n  people: Array<any>;\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, OnDestroy, AfterContentInit {\n  displayedColumns: string[] = ['when', 'courtFee', 'id'];\n  dataSource = new MatTableDataSource<PeriodicElement>();\n  shareData: any;\n  peopleList: any;\n  sum: any = [];\n  hidden: Boolean = false;\n  deleteRecord: Boolean = false;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public _data: FirestoreDataService, public route: ActivatedRoute,\n    private spinner: NgxSpinnerService, private _shareData: ShareService, public dialog: MatDialog) {\n    }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      console.log(params);\n      if (params.delete === 's') {\n        this.deleteRecord = true;\n      }\n    });\n    this.spinner.show();\n    this._data.getPeople().subscribe(\n      res => {\n        this.peopleList = res;\n        this.spinner.hide();\n      });\n    this._shareData.getShare().subscribe(\n      data => {\n        this.shareData = data;\n        this.dataSource.data = this.shareData;\n        this.spinner.hide();\n        console.log(data);\n        if (data) {this.calculateShareAmount(this.shareData); }\n      });\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  calculateShareAmount(arr) {\n    // Calculate Shares total by id\n    const totalPaid = [];\n    if (this.peopleList.length > 0) {\n      for (const ids of this.peopleList) {\n        // console.log('start', ids.id);\n        let a = 0;\n        let p = 0;\n        // console.log(a);\n        for (const s of arr) {\n          s.shareSheet.forEach(function(i) {\n            if (i.id === ids.id) {\n              // if (i.court > 0) {\n                 a = a + i.court + i.shuttle;\n              // }\n              p = p + i.played;\n            }\n          });\n        }\n        // console.log(a, ids.id);\n        this.sum.push({id : ids.id, totalPaid : a, totalPlayed : p, toPay: a - p});\n      }\n      console.log(this.sum);\n    }\n  }\n\n  ngAfterContentInit() { }\n\n\n\n  ngOnDestroy() {}\n  delete(id) {\n    // console.log(id.id)\n   this._shareData.deleteShare(id);\n  }\n  showPop(element): void {\n    element.people = this.peopleList;\n    // console.log(element)\n    const dialogRef = this.dialog.open(AppShareDataDialogComponent, {\n      data: element\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n}\n\n// Dialog Box\n\n@Component({\n  selector: 'app-share-data-dialog-component',\n  templateUrl: 'share-data-dialog.component.html',\n})\nexport class AppShareDataDialogComponent {\n  peopleList: any;\n  realOne: any;\n  constructor(\n    public dialogRef: MatDialogRef<AppShareDataDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public _datas: PeriodicElement) {\n      console.log(this._datas);\n\n      }\n\n\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<h1 class=\\\"display-6\\\" mat-dialog-title>Amount:\\r\\n    <span class=\\\"text-muted\\\">₹{{_datas.totalAmount}}</span>\\r\\n    <!-- <label>{{ _datas.when.toDate() | date: 'mediumDate'}}:</label> -->\\r\\n</h1>\\r\\n\\r\\n<span *ngFor=\\\"let o of _datas.whoPlayed\\\"></span><br>\\r\\n<div mat-dialog-content>\\r\\n    <table class=\\\"table table-stripped\\\">\\r\\n        <tr>\\r\\n            <th>Players</th>\\r\\n            <th>Court</th>\\r\\n            <th>Shuttle</th>\\r\\n            <th>Share</th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let item of _datas.shareSheet\\\">\\r\\n            <td>\\r\\n                <div *ngFor=\\\"let name of _datas.people\\\">\\r\\n                    {{item.id == name.id ? name.name:''}}\\r\\n                </div>\\r\\n            </td>\\r\\n            <td>{{item.court | number: '1.1-1'}}</td>\\r\\n            <td>{{item.shuttle | number: '1.1-1'}}</td>\\r\\n            <td>{{item.played | number: '1.1-1'}}</td>\\r\\n        </tr>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button [mat-dialog-close]=\\\"\\\" cdkFocusInitial>Close</button>\\r\\n</div>\\r\\n\"","module.exports = \"\"","module.exports = \"<p>\\n  events works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\n\nimport { Observable } from 'rxjs';\nimport { User } from './user';\nimport { People } from './people';\nimport {map} from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirestoreDataService implements OnInit {\n  userscollection: AngularFirestoreCollection<User>;\n\n  users: Observable<User[]>;\n  peoplecollection: AngularFirestoreCollection<People>;\n  people: Observable<People[]>;\n  userDoc: AngularFirestoreDocument<User>;\n  peopleDoc: AngularFirestoreDocument<People>;\n  constructor(public _afs: AngularFirestore) {\n    this.peoplecollection = this._afs.collection('people', x => x.orderBy('name', 'asc'));\n  }\n\n  ngOnInit() {}\n\n\n\n  getPeople() {\n    this.people = this.peoplecollection.snapshotChanges().pipe(map(\n      changes => {\n        return changes.map(\n          a => {\n            const data = a.payload.doc.data() as People;\n            data.id = a.payload.doc.id;\n            return data;\n          });\n\n      }));\n    return this.people;\n  }\n  addPeople(user) {\n    this.peoplecollection.add(user);\n  }\n  deletePeople(user) {\n    this.peopleDoc = this._afs.doc(`people/${user.id}`);\n    this.peopleDoc.delete();\n  }\n  getPeopleById(id) {\n    this.peopleDoc = this._afs.doc(`people/${id}`);\n    // return this.peopleDoc.get();\n\n    // this.peopleDoc.get().subscribe(res =>\n    //   {\n    //     // console.log(res)\n    //   }\n    // )\n  }\n  // getUsers() {\n  //   return this.users;\n  // }\n  // addUser(user) {\n  //   this.userscollection.add(user);\n  // }\n  // deleteUser(user) {\n  //   this.userDoc = this._afs.doc(`users/${user.id}`);\n  //   this.userDoc.delete();\n  // }\n}\n","module.exports = \"\"","module.exports = \"<button (click)=\\\"login()\\\">Login</button>\\n\"","\nimport { Component, OnInit } from '@angular/core';\nimport {Validators, FormGroup, FormBuilder} from '@angular/forms';\nimport {AuthService} from '../core/security/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private authService: AuthService,\n                private router: Router) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.authService.doGoogleLogin()\n    .then( (res) => {\n      console.log(res);\n    })\n    .catch(function(err) {\n      console.log(err);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  players works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-players',\n  templateUrl: './players.component.html',\n  styleUrls: ['./players.component.css']\n})\nexport class PlayersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"addTourney\\\" (ngSubmit)=\\\"onSubmit(addTourney)\\\">\\r\\n<h1 class=\\\"display-6\\\" mat-dialog-title>Add Tournament</h1>\\r\\n<div mat-dialog-content>\\r\\n\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-6\\\">\\r\\n                  <mat-form-field class=\\\"addTourneyInput\\\">\\r\\n                    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\">\\r\\n                  </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-6\\\">\\r\\n                  <mat-form-field class=\\\"addTourneyInput\\\">\\r\\n                    <input matInput placeholder=\\\"Sub Title\\\" formControlName=\\\"subTitle\\\">\\r\\n                  </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-6\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" formControlName=\\\"eventDate\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #picker></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-6\\\">\\r\\n                <mat-form-field class=\\\"addTourneyInput\\\">\\r\\n                  <input type=\\\"text\\\" placeholder=\\\"Select Type\\\" aria-label=\\\"Type\\\" matInput formControlName=\\\"type\\\" [matAutocomplete]=\\\"auto1\\\">\\r\\n                  <mat-autocomplete #auto1=\\\"matAutocomplete\\\">\\r\\n                    <mat-option *ngFor=\\\"let item of tTypes\\\" [value]=\\\"item\\\">\\r\\n                      {{item}}\\r\\n                    </mat-option>\\r\\n                  </mat-autocomplete>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-6\\\">\\r\\n                <mat-form-field class=\\\"addTourneyInput\\\">\\r\\n                  <input type=\\\"text\\\" placeholder=\\\"City\\\" aria-label=\\\"City\\\" matInput formControlName=\\\"city\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n                  <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n                    <mat-option *ngFor=\\\"let option of cities\\\" [value]=\\\"option\\\">\\r\\n                      {{option}}\\r\\n                    </mat-option>\\r\\n                  </mat-autocomplete>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-6\\\">\\r\\n                  <label class=\\\"btn btn-default\\\"> Choose Poster:\\r\\n                      <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\">\\r\\n                    </label>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button [mat-dialog-close]=\\\"\\\" cdkFocusInitial>Close</button>\\r\\n  <button mat-button [disabled]=\\\"!selectedFiles\\\">Submit</button>\\r\\n</div>\\r\\n<div *ngIf=\\\"currentFileUpload\\\" class=\\\"progress\\\">\\r\\n    <div class=\\\"progress-bar progress-bar-info progress-bar-striped\\\"\\r\\n      role=\\\"progressbar\\\" attr.aria-valuenow=\\\"{{progress.percentage}}\\\"\\r\\n      aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"\\r\\n      [ngStyle]=\\\"{width:progress.percentage+'%'}\\\">\\r\\n      {{progress.percentage}}%</div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \".mat-card-header-text {\\r\\n  margin: 0 0px;\\r\\n}\\r\\nmat-grid-tile {\\r\\n  background: lightblue;\\r\\n}\\r\\n.addTourneyInput{\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n      <button mat-fab color=\\\"primary\\\" (click)=\\\"showPop()\\\">\\n        <i class=\\\"material-icons\\\"> add </i>\\n      </button>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select Types\\\" [(value)]=\\\"selectedFuture\\\">\\n        <mat-option *ngFor=\\\"let food of future\\\" [value]=\\\"food\\\">\\n          {{food}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"col\\\">\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n      </mat-form-field>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Select Types\\\" [(value)]=\\\"selectedtTypes\\\">\\n        <mat-option *ngFor=\\\"let food of tTypes\\\" [value]=\\\"food\\\">\\n          {{food}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field></div>\\n  <div class=\\\"col\\\"><mat-form-field>\\n      <mat-select placeholder=\\\"Select State / City\\\" [(ngModel)]=\\\"selectedCity\\\" >\\n        <mat-option *ngFor=\\\"let food of cities\\\" [value]=\\\"food\\\">\\n          {{food}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field></div>\\n</div>\\n\\n<!-- {{selectedCity}} -->\\n<div class=\\\"row\\\" *ngIf=\\\"fileUploads.length > 0\\\">\\n  <div class=\\\"col-4\\\" *ngFor=\\\"let file of fileUploads\\\">\\n    <mat-card class=\\\"example-card\\\">\\n      <mat-card-header>\\n        <!-- <div mat-card-avatar class=\\\"example-header-image\\\"></div> -->\\n        <mat-card-title>{{file.title}}</mat-card-title>\\n        <mat-card-subtitle>{{file.subTitle}}</mat-card-subtitle>\\n      </mat-card-header>\\n      <img mat-card-image src=\\\"{{file.url}}\\\">\\n      <mat-card-content>\\n        <p>\\n          {{convertDate(file.eventDate) | date: 'dd MMM yyy'}}\\n        </p>\\n      </mat-card-content>\\n      <mat-card-actions>\\n        <button mat-button>GOING</button>\\n        <button mat-button (click)=\\\"removeItem(file)\\\">REMOVE</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </div>\\n</div>\\n\\n\\n<!-- <div *ngFor=\\\"let file of fileUploads\\\">\\n\\t{{file.name}}\\n  <img src=\\\"{{file.url}}\\\"/>\\n  <button (click)=\\\"removeItem(file)\\\">Delete</button>\\n</div> -->\\n\\n\\n\\n\\n<!-- <div *ngIf=\\\"currentFileUpload\\\" class=\\\"progress\\\">\\n\\t<div class=\\\"progress-bar progress-bar-info progress-bar-striped\\\"\\n\\t\\trole=\\\"progressbar\\\" attr.aria-valuenow=\\\"{{progress.percentage}}\\\"\\n\\t\\taria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"\\n\\t\\t[ngStyle]=\\\"{width:progress.percentage+'%'}\\\">\\n\\t\\t{{progress.percentage}}%</div>\\n</div> -->\\n\\n\\n\\n<!-- <label class=\\\"btn btn-default\\\">\\n  <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\">\\n</label>\\n\\n<button class=\\\"btn btn-success\\\" [disabled]=\\\"!selectedFiles\\\"\\n\\t(click)=\\\"upload()\\\">Upload</button> -->\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { UploadFileService, FileUpload } from 'src/app/services/upload.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-tournaments',\n  templateUrl: './tournaments.component.html',\n  styleUrls: ['./tournaments.component.css']\n})\nexport class TournamentsComponent implements OnInit {\n  // myForm: FormGroup;\n  fileUploads: any[];\n  // selectedFiles: FileList;\n  currentFileUpload: FileUpload;\n  cities: string[] = ['Bangalore', 'Chennai', 'Hydrabad', 'Kerala'];\n  tTypes: any = ['Kids', `Adults`, `Kids & Adults`];\n  // progress: { percentage: number } = { percentage: 0 };\n  // myControl = new FormControl();\n  public future: string[] = ['Upcoming', 'Past'];\n  selectedFuture: any;\n  selectedtTypes: any;\n  selectedCity: any;\n  constructor(private uploadService: UploadFileService, public dialog: MatDialog) {\n    this.selectedFuture = this.future[0];\n    this.selectedtTypes = this.tTypes[2];\n    this.selectedCity   = this.cities[0];\n   }\n\n  ngOnInit() {\n  //   this.myForm = this.fb.group({\n  //     title: [''],\n  //     subTitle: [''],\n  //     eventDate: [''],\n  //     city: ['']\n  // });\n    // Use snapshotChanges().pipe(map()) to store the key\n    this.uploadService.getFileUploads(6).snapshotChanges().pipe(\n      map(changes =>\n        changes.map(c => ({ key: c.payload.key, ...c.payload.val() }))\n      )\n    ).subscribe((fileUploads: any) => {\n      this.fileUploads = fileUploads;\n      console.log('firebase:', this.fileUploads);\n    });\n  }\n  // selectFile(event) {\n  //   const file = event.target.files.item(0);\n\n  //   if (file.type.match('image.*')) {\n  //     this.selectedFiles = event.target.files;\n  //   } else {\n  //     alert('invalid format!');\n  //   }\n  // }\n\n  upload() {\n    // const file = this.selectedFiles.item(0);\n    // this.selectedFiles = undefined;\n\n    // this.currentFileUpload = new FileUpload(file);\n    // console.log(this.currentFileUpload);\n    // this.uploadService.pushFileToStorage(this.currentFileUpload, this.progress);\n  }\n  convertDate(obj: any) {\n    return new Date(obj);\n  }\n  removeItem(fileUpload: FileUpload) {\n    // console.log(fileUpload);\n    this.uploadService.deleteFileUpload(fileUpload);\n  }\n\n  showPop(): void {\n    const dialogRef = this.dialog.open(AppAddDialogComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n}\n\n// Dialog Box\n\n@Component({\n  selector: 'app-add-dialog-component',\n  templateUrl: 'add-dialog.component.html',\n  styleUrls: ['./tournaments.component.css']\n})\nexport class AppAddDialogComponent implements OnInit {\n  peopleList: any;\n  realOne: any;\n  addTourney: FormGroup;\n  fileUploads: any[];\n  selectedFiles: FileList;\n  currentFileUpload: FileUpload;\n  progress: { percentage: number } = { percentage: 0 };\n  cities: string[] = ['Bangalore', 'Chennai', 'Hydrabad', 'Kerala'];\n  tTypes: any = ['Kids', `Adults`, `Both`];\n  constructor(\n    public dialogRef: MatDialogRef<AppAddDialogComponent>,\n    public fb: FormBuilder,\n    private uploadService: UploadFileService\n    ) {\n      // console.log(this._datas);\n      }\n    ngOnInit() {\n      this.addTourney = this.fb.group({\n        title: [''],\n        subTitle: [''],\n        eventDate: [''],\n        city: [''],\n        type: ['']\n      });\n      // this.uploadService.getFileUploads(6).snapshotChanges().pipe(\n      //   map(changes =>\n      //     changes.map(c => ({ key: c.payload.key, ...c.payload.val() }))\n      //   )\n      // ).subscribe((fileUploads: any) => {\n      //   this.fileUploads = fileUploads;\n      //   console.log('firebase:', fileUploads);\n      // });\n    }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  private convertDate(obj: any) {\n    return new Date(obj);\n  }\n  selectFile(event) {\n    const file = event.target.files.item(0);\n\n    if (file.type.match('image.*')) {\n      this.selectedFiles = event.target.files;\n    } else {\n      alert('invalid format!');\n    }\n  }\n\n  onSubmit(obj: any) {\n    const file = this.selectedFiles.item(0);\n    this.selectedFiles = undefined;\n    this.currentFileUpload = new FileUpload(file);\n    // console.log(obj.value);\n    obj.value.eventDate = obj.value.eventDate.toString();\n    this.uploadService.pushFileToStorage(this.currentFileUpload, obj.value, this.progress);\n    this.dialogRef.close();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'myfilter',\r\n    pure: false\r\n})\r\nexport class MyFilterPipe implements PipeTransform {\r\n    transform(items: any[], filter: Object): any {\r\n        if (!items || !filter) {\r\n          console.log(items, filter);\r\n            return items;\r\n        }\r\n        // filter items array, items which match and return true will be\r\n        // kept, false will be filtered out\r\n        // return items.filter(item => item.indexOf(filter) !== -1);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\n\n\nimport { Observable } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport { Share } from '../interface/share';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShareService {\n  shareCollection: AngularFirestoreCollection<Share>;\n  share: Observable<Share[]>;\n  shareDoc: AngularFirestoreDocument<Share>;\n  constructor(public _afs: AngularFirestore) {\n    this.shareCollection = this._afs.collection('share', ref => ref.orderBy('when', 'desc'));\n\n   }\n\n  getShare() {\n    this.share = this.shareCollection.snapshotChanges().pipe(map(\n      changes => {\n        return changes.map(\n          a => {\n            const data = a.payload.doc.data() as Share;\n            data.id = a.payload.doc.id;\n            return data;\n          });\n      }));\n    return this.share;\n  }\n  addShare(obj) {\n    return this.shareCollection.add(obj).then((res) => {});\n  }\n  deleteShare(obj) {\n    this.shareDoc = this._afs.doc(`share/${obj.id}`);\n    this.shareDoc.delete();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireDatabase, AngularFireList} from 'angularfire2/database';\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\n\r\nexport class FileUpload {\r\n\r\n  key: string;\r\n  name: string;\r\n  url: string;\r\n  file: File;\r\n  city: string;\r\n  tType: string;\r\n  title: string;\r\n  subTitle: string;\r\n  eventDate: any;\r\n  createdAt: any;\r\n  constructor(file: File) {\r\n      this.file = file;\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadFileService {\r\n\r\n  private basePath = '/tournaments';\r\n  private city: any;\r\n  constructor(private db: AngularFireDatabase) { }\r\n\r\n  pushFileToStorage(fileUpload: FileUpload, obj: any, progress: { percentage: number }) {\r\n    console.log(obj);\r\n\r\n    const storageRef = firebase.storage().ref();\r\n    const uploadTask = storageRef.child(`${this.basePath}/${fileUpload.file.name}`).put(fileUpload.file);\r\n\r\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,\r\n      (snapshot) => {\r\n        // in progress\r\n        const snap = snapshot as firebase.storage.UploadTaskSnapshot;\r\n        progress.percentage = Math.round((snap.bytesTransferred / snap.totalBytes) * 100);\r\n      },\r\n      (error) => {\r\n        // fail\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // success\r\n        uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\r\n          console.log('File available at', obj.eventDate);\r\n          fileUpload.url = downloadURL;\r\n          fileUpload.name = fileUpload.file.name;\r\n          fileUpload.title = obj.title;\r\n          fileUpload.subTitle = obj.subTitle;\r\n          fileUpload.city = obj.city;\r\n          fileUpload.tType = obj.type;\r\n          fileUpload.createdAt = Date.now();\r\n          fileUpload.eventDate = obj.eventDate;\r\n          console.log(fileUpload);\r\n          if (fileUpload) {\r\n            this.saveFileData(fileUpload);\r\n          }\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  private saveFileData(fileUpload: FileUpload) {\r\n    this.db.list(`${this.basePath}/`).push(fileUpload);\r\n  }\r\n\r\n  getFileUploads(numberItems): AngularFireList<FileUpload> {\r\n    return this.db.list(this.basePath, ref =>\r\n      ref.limitToLast(numberItems));\r\n  }\r\n\r\n  deleteFileUpload(fileUpload: FileUpload) {\r\n    this.deleteFileDatabase(fileUpload.key)\r\n      .then(() => {\r\n        this.deleteFileStorage(fileUpload.name);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  private deleteFileDatabase(key: string) {\r\n    return this.db.list(`${this.basePath}/`).remove(key);\r\n  }\r\n\r\n  private deleteFileStorage(name: string) {\r\n    const storageRef = firebase.storage().ref();\r\n    storageRef.child(`${this.basePath}/${name}`).delete();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport {\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatListModule,\n    MatInputModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatIconModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MATERIAL_SANITY_CHECKS\n} from '@angular/material';\n\nconst materialModules: any[] = [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatListModule,\n    MatInputModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatIconModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatDialogModule\n];\n\n@NgModule({\n    imports: materialModules,\n    exports: materialModules,\n    providers: [\n        {\n            provide: MATERIAL_SANITY_CHECKS,\n            useValue: false\n        }\n    ]\n})\n\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MaterialModule } from './material.module';\n\nconst sharedModules: any[] = [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    MaterialModule\n];\n\n@NgModule({\n    imports: sharedModules,\n    exports: sharedModules\n})\n\nexport class SharedModule { }\n","module.exports = \".table td, .table th{\\r\\n  padding: 0px;\\r\\n}\\r\\n.table td iframe{\\r\\n  width: 100% !important;\\r\\n}\\r\\n.table{\\r\\n  width:90%;\\r\\n}\\r\\n\"","module.exports = \"<button (click)=\\\"prevFn(videoArray.prevPageToken)\\\" *ngIf=\\\"videoArray.prevPageToken\\\">Prev</button>\\n<button (click)=\\\"nextFn(videoArray.nextPageToken)\\\" *ngIf=\\\"videoArray.nextPageToken\\\">Next</button>\\n    <table class=\\\"table\\\">\\n      <tr *ngFor=\\\"let item of videoArray.items\\\">\\n        <td>\\n          <youtube-player [videoId]=\\\"item.id.videoId\\\"></youtube-player>\\n        </td>\\n      </tr>\\n    </table>\\n    <button (click)=\\\"prevFn(videoArray.prevPageToken)\\\" *ngIf=\\\"videoArray.prevPageToken\\\">Prev</button>\\n    <button (click)=\\\"nextFn(videoArray.nextPageToken)\\\" *ngIf=\\\"videoArray.nextPageToken\\\">Next</button>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { HttpClient } from '@angular/common/http';\nimport { environment as env } from '../../environments/environment';\n\n@Component({\n  selector: 'app-videos',\n  templateUrl: './videos.component.html',\n  styleUrls: ['./videos.component.css']\n})\nexport class VideosComponent implements OnInit {\n  player: YT.Player;\n  nextpageToken: any;\n  videoArray: any = [];\n  ytURL: any = env.ytBaseUrl + env.ytKey + '&channelId=' + env.channelId + '&part=snippet,id&order=date&maxResults=5';\n  constructor(private spinner: NgxSpinnerService, public http: HttpClient) {\n\n    // this.http.get(this.ytURL)\n    // .subscribe(\n    //   data => {\n    //     console.log(data);\n    //     this.videoArray = data;\n    //   },\n    //   error => {\n    //     console.log('Error', error);\n    //   }\n    // );\n\n\n\n   }\n\n  ngOnInit() {\n    this.fetchToken('');\n  }\n\n\n\n\n  prevFn(token) {\n    this.fetchToken(token);\n  }\n  nextFn(token) {\n    this.fetchToken(token);\n  }\n  fetchToken(token) {\n    this.spinner.show();\n    this.http.get(this.ytURL + '&pageToken=' + token)\n    .subscribe(\n      data => {\n        this.spinner.hide();\n        this.videoArray = data;\n        console.log(data)\n      },\n      error => {\n        console.log('Error', error);\n      }\n    );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  isContentLoading: false,\n  firebase: {\n    apiKey: 'AIzaSyD6lHaY0h-DNQKxKGeDKLkmDfsRg5UqDH8',\n    authDomain: 'rscs-5d73d.firebaseapp.com',\n    databaseURL: 'https://rscs-5d73d.firebaseio.com',\n    projectId: 'rscs-5d73d',\n    storageBucket: 'rscs-5d73d.appspot.com',\n    messagingSenderId: '1054174777846'\n  },\n  ytBaseUrl: 'https://www.googleapis.com/youtube/v3/search?key=',\n  ytKey: 'AIzaSyD49Q_iaWCzYyZnUvGJgofQ5N7vVf61ONY',\n  channelId: 'UC7T_wTPNhAVl3qSr4i5ThoQ',\n  playlistId: 'PLS2sSCeEuo-WiwHidasFy7rA5cqukkj0y',\n  ytUserId: '7T_wTPNhAVl3qSr4i5ThoQ'\n};\n\n/*\n*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .then(() => {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.register('/ngsw-worker.js') ;\n    }\n  })\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}